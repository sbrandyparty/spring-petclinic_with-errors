<?xml version="1.0" encoding="UTF-8"?><testrun duration="37770" footerText="Generated by IntelliJ IDEA on 25.08.17 14:44" name="All in spring-petclinic">
    <count name="total" value="62"/>
    <count name="failed" value="4"/>
    <count name="passed" value="58"/>
    <config nameIsGenerated="true" configId="JUnit" name="All in spring-petclinic">
        <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea"/>
        <module name="spring-petclinic"/>
        <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false"/>
        <option name="ALTERNATIVE_JRE_PATH"/>
        <option name="PACKAGE_NAME" value=""/>
        <option name="MAIN_CLASS_NAME"/>
        <option name="METHOD_NAME"/>
        <option name="TEST_OBJECT" value="package"/>
        <option name="VM_PARAMETERS" value="-ea"/>
        <option name="PARAMETERS"/>
        <option name="WORKING_DIRECTORY" value="$MODULE_DIR$"/>
        <option name="ENV_VARIABLES"/>
        <option name="PASS_PARENT_ENVS" value="true"/>
        <option name="TEST_SEARCH_SCOPE">
            <value defaultName="singleModule"/>
        </option>
        <envs/>
        <patterns/>
    </config>
    <root name="&lt;default package&gt;" location="java:suite://&lt;default package&gt;">
        <output type="stdout">C:\Development\apps\Java\jdk1.8.0_25\bin\java -ea -Didea.test.cyclic.buffer.size=1048576 &amp;quot;-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2017.2.2\lib\idea_rt.jar=57414:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2017.2.2\bin&amp;quot; -Dfile.encoding=UTF-8 -classpath &amp;quot;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2017.2.2\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2017.2.2\plugins\junit\lib\junit-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2017.2.2\plugins\junit\lib\junit5-rt.jar;C:\Development\apps\Java\jdk1.8.0_25\jre\lib\charsets.jar;C:\Development\apps\Java\jdk1.8.0_25\jre\lib\deploy.jar;C:\Development\apps\Java\jdk1.8.0_25\jre\lib\ext\access-bridge-64.jar;C:\Development\apps\Java\jdk1.8.0_25\jre\lib\ext\cldrdata.jar;C:\Development\apps\Java\jdk1.8.0_25\jre\lib\ext\dnsns.jar;C:\Development\apps\Java\jdk1.8.0_25\jre\lib\ext\jaccess.jar;C:\Development\apps\Java\jdk1.8.0_25\jre\lib\ext\jfxrt.jar;C:\Development\apps\Java\jdk1.8.0_25\jre\lib\ext\localedata.jar;C:\Development\apps\Java\jdk1.8.0_25\jre\lib\ext\nashorn.jar;C:\Development\apps\Java\jdk1.8.0_25\jre\lib\ext\sunec.jar;C:\Development\apps\Java\jdk1.8.0_25\jre\lib\ext\sunjce_provider.jar;C:\Development\apps\Java\jdk1.8.0_25\jre\lib\ext\sunmscapi.jar;C:\Development\apps\Java\jdk1.8.0_25\jre\lib\ext\sunpkcs11.jar;C:\Development\apps\Java\jdk1.8.0_25\jre\lib\ext\zipfs.jar;C:\Development\apps\Java\jdk1.8.0_25\jre\lib\javaws.jar;C:\Development\apps\Java\jdk1.8.0_25\jre\lib\jce.jar;C:\Development\apps\Java\jdk1.8.0_25\jre\lib\jfr.jar;C:\Development\apps\Java\jdk1.8.0_25\jre\lib\jfxswt.jar;C:\Development\apps\Java\jdk1.8.0_25\jre\lib\jsse.jar;C:\Development\apps\Java\jdk1.8.0_25\jre\lib\management-agent.jar;C:\Development\apps\Java\jdk1.8.0_25\jre\lib\plugin.jar;C:\Development\apps\Java\jdk1.8.0_25\jre\lib\resources.jar;C:\Development\apps\Java\jdk1.8.0_25\jre\lib\rt.jar;C:\Development\repos\spring-petclinic-master - GLOBOErr\spring-petclinic-master\target\test-classes;C:\Development\repos\spring-petclinic-master - GLOBOErr\spring-petclinic-master\target\classes;C:\Users\u001312\.m2\repository\javax\javaee-api\7.0\javaee-api-7.0.jar;C:\Users\u001312\.m2\repository\com\sun\mail\javax.mail\1.5.5\javax.mail-1.5.5.jar;C:\Users\u001312\.m2\repository\javax\activation\activation\1.1.1\activation-1.1.1.jar;C:\Users\u001312\.m2\repository\org\jadira\usertype\usertype.core\3.2.0.GA\usertype.core-3.2.0.GA.jar;C:\Users\u001312\.m2\repository\org\jadira\usertype\usertype.spi\3.2.0.GA\usertype.spi-3.2.0.GA.jar;C:\Users\u001312\.m2\repository\org\apache\tomcat\tomcat-servlet-api\7.0.59\tomcat-servlet-api-7.0.59.jar;C:\Users\u001312\.m2\repository\javax\servlet\jsp\javax.servlet.jsp-api\2.2.1\javax.servlet.jsp-api-2.2.1.jar;C:\Users\u001312\.m2\repository\org\apache\tomcat\tomcat-jasper-el\7.0.59\tomcat-jasper-el-7.0.59.jar;C:\Users\u001312\.m2\repository\org\apache\tomcat\tomcat-el-api\7.0.59\tomcat-el-api-7.0.59.jar;C:\Users\u001312\.m2\repository\javax\servlet\jsp\jstl\javax.servlet.jsp.jstl-api\1.2.1\javax.servlet.jsp.jstl-api-1.2.1.jar;C:\Users\u001312\.m2\repository\org\apache\taglibs\taglibs-standard-jstlel\1.2.5\taglibs-standard-jstlel-1.2.5.jar;C:\Users\u001312\.m2\repository\org\apache\taglibs\taglibs-standard-spec\1.2.5\taglibs-standard-spec-1.2.5.jar;C:\Users\u001312\.m2\repository\org\apache\taglibs\taglibs-standard-impl\1.2.5\taglibs-standard-impl-1.2.5.jar;C:\Users\u001312\.m2\repository\com\jayway\jsonpath\json-path\2.0.0\json-path-2.0.0.jar;C:\Users\u001312\.m2\repository\net\minidev\json-smart\2.1.1\json-smart-2.1.1.jar;C:\Users\u001312\.m2\repository\net\minidev\asm\1.0.2\asm-1.0.2.jar;C:\Users\u001312\.m2\repository\asm\asm\3.3.1\asm-3.3.1.jar;C:\Users\u001312\.m2\repository\org\springframework\data\spring-data-jpa\1.9.4.RELEASE\spring-data-jpa-1.9.4.RELEASE.jar;C:\Users\u001312\.m2\repository\org\springframework\data\spring-data-commons\1.11.4.RELEASE\spring-data-commons-1.11.4.RELEASE.jar;C:\Users\u001312\.m2\repository\org\springframework\spring-orm\4.2.7.RELEASE\spring-orm-4.2.7.RELEASE.jar;C:\Users\u001312\.m2\repository\org\springframework\spring-context\4.2.7.RELEASE\spring-context-4.2.7.RELEASE.jar;C:\Users\u001312\.m2\repository\org\springframework\spring-aop\4.2.7.RELEASE\spring-aop-4.2.7.RELEASE.jar;C:\Users\u001312\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\u001312\.m2\repository\org\springframework\spring-tx\4.2.7.RELEASE\spring-tx-4.2.7.RELEASE.jar;C:\Users\u001312\.m2\repository\org\springframework\spring-beans\4.2.7.RELEASE\spring-beans-4.2.7.RELEASE.jar;C:\Users\u001312\.m2\repository\org\springframework\spring-core\4.2.7.RELEASE\spring-core-4.2.7.RELEASE.jar;C:\Users\u001312\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.21\jcl-over-slf4j-1.7.21.jar;C:\Users\u001312\.m2\repository\org\springframework\data\spring-data-jdbc-core\1.1.0.RELEASE\spring-data-jdbc-core-1.1.0.RELEASE.jar;C:\Users\u001312\.m2\repository\org\springframework\retry\spring-retry\1.1.3.RELEASE\spring-retry-1.1.3.RELEASE.jar;C:\Users\u001312\.m2\repository\org\springframework\spring-jdbc\4.2.7.RELEASE\spring-jdbc-4.2.7.RELEASE.jar;C:\Users\u001312\.m2\repository\org\springframework\spring-webmvc\4.2.7.RELEASE\spring-webmvc-4.2.7.RELEASE.jar;C:\Users\u001312\.m2\repository\org\springframework\spring-expression\4.2.7.RELEASE\spring-expression-4.2.7.RELEASE.jar;C:\Users\u001312\.m2\repository\org\springframework\spring-web\4.2.7.RELEASE\spring-web-4.2.7.RELEASE.jar;C:\Users\u001312\.m2\repository\org\springframework\spring-context-support\4.2.7.RELEASE\spring-context-support-4.2.7.RELEASE.jar;C:\Users\u001312\.m2\repository\org\springframework\spring-oxm\4.2.7.RELEASE\spring-oxm-4.2.7.RELEASE.jar;C:\Users\u001312\.m2\repository\org\aspectj\aspectjrt\1.8.9\aspectjrt-1.8.9.jar;C:\Users\u001312\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\u001312\.m2\repository\org\apache\tomcat\tomcat-jdbc\8.0.36\tomcat-jdbc-8.0.36.jar;C:\Users\u001312\.m2\repository\org\apache\tomcat\tomcat-juli\8.0.36\tomcat-juli-8.0.36.jar;C:\Users\u001312\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\u001312\.m2\repository\ch\qos\logback\logback-classic\1.1.7\logback-classic-1.1.7.jar;C:\Users\u001312\.m2\repository\ch\qos\logback\logback-core\1.1.7\logback-core-1.1.7.jar;C:\Users\u001312\.m2\repository\joda-time\joda-time\2.8.2\joda-time-2.8.2.jar;C:\Users\u001312\.m2\repository\joda-time\joda-time-hibernate\1.3\joda-time-hibernate-1.3.jar;C:\Users\u001312\.m2\repository\joda-time\joda-time-jsptags\1.1.1\joda-time-jsptags-1.1.1.jar;C:\Users\u001312\.m2\repository\org\hsqldb\hsqldb\2.3.3\hsqldb-2.3.3.jar;C:\Users\u001312\.m2\repository\org\hibernate\hibernate-entitymanager\4.3.11.Final\hibernate-entitymanager-4.3.11.Final.jar;C:\Users\u001312\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\u001312\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\u001312\.m2\repository\org\hibernate\hibernate-core\4.3.11.Final\hibernate-core-4.3.11.Final.jar;C:\Users\u001312\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\u001312\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;C:\Users\u001312\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\u001312\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\u001312\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.5.Final\hibernate-commons-annotations-4.0.5.Final.jar;C:\Users\u001312\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\u001312\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\u001312\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\u001312\.m2\repository\org\hibernate\hibernate-validator\5.2.4.Final\hibernate-validator-5.2.4.Final.jar;C:\Users\u001312\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;C:\Users\u001312\.m2\repository\com\fasterxml\classmate\1.1.0\classmate-1.1.0.jar;C:\Users\u001312\.m2\repository\org\hibernate\hibernate-ehcache\4.3.11.Final\hibernate-ehcache-4.3.11.Final.jar;C:\Users\u001312\.m2\repository\net\sf\ehcache\ehcache-core\2.4.3\ehcache-core-2.4.3.jar;C:\Users\u001312\.m2\repository\net\sf\ehcache\ehcache\2.10.2.2.21\ehcache-2.10.2.2.21.jar;C:\Users\u001312\.m2\repository\org\springframework\spring-test\4.2.7.RELEASE\spring-test-4.2.7.RELEASE.jar;C:\Users\u001312\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\u001312\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\u001312\.m2\repository\org\assertj\assertj-core\2.2.0\assertj-core-2.2.0.jar;C:\Users\u001312\.m2\repository\org\mockito\mockito-core\1.10.19\mockito-core-1.10.19.jar;C:\Users\u001312\.m2\repository\org\objenesis\objenesis\2.1\objenesis-2.1.jar;C:\Users\u001312\.m2\repository\org\hamcrest\hamcrest-all\1.3\hamcrest-all-1.3.jar;C:\Users\u001312\.m2\repository\com\github\dandelion\dandelion-jsp\1.1.1\dandelion-jsp-1.1.1.jar;C:\Users\u001312\.m2\repository\com\github\dandelion\dandelion-core\1.1.1\dandelion-core-1.1.1.jar;C:\Users\u001312\.m2\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;C:\Users\u001312\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.6.7\jackson-core-2.6.7.jar;C:\Users\u001312\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.6.7\jackson-annotations-2.6.7.jar;C:\Users\u001312\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.6.7\jackson-databind-2.6.7.jar;C:\Users\u001312\.m2\repository\com\github\dandelion\datatables-jsp\1.1.0\datatables-jsp-1.1.0.jar;C:\Users\u001312\.m2\repository\com\github\dandelion\datatables-core\1.1.0\datatables-core-1.1.0.jar;C:\Users\u001312\.m2\repository\commons-beanutils\commons-beanutils\1.9.2\commons-beanutils-1.9.2.jar;C:\Users\u001312\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\u001312\.m2\repository\com\github\dandelion\datatables-export-itext\1.1.0\datatables-export-itext-1.1.0.jar;C:\Users\u001312\.m2\repository\com\itextpdf\itextpdf\5.4.5\itextpdf-5.4.5.jar;C:\Users\u001312\.m2\repository\com\googlecode\json-simple\json-simple\1.1.1\json-simple-1.1.1.jar&amp;quot; com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 @w@C:\Users\u001312\AppData\Local\Temp\idea_working_dirs_junit1311.tmp @C:\Users\u001312\AppData\Local\Temp\idea_junit1235.tmp -socket57413
</output>
        <output type="stdout">INFO  DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
INFO  DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@727803de, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@704921a5, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@df27fae, org.springframework.test.context.support.DirtiesContextTestExecutionListener@24a35978, org.springframework.test.context.transaction.TransactionalTestExecutionListener@16f7c8c1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2f0a87b3]
INFO  DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
INFO  DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5d11346a, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7a36aefa, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@17211155, org.springframework.test.context.support.DirtiesContextTestExecutionListener@b3d7190, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5fdba6f9, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@10d59286]
INFO  DefaultTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
INFO  DefaultTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@281e3708, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@35a50a4c, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1f021e6c, org.springframework.test.context.support.DirtiesContextTestExecutionListener@103f852, org.springframework.test.context.transaction.TransactionalTestExecutionListener@587c290d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4516af24]
INFO  WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
INFO  WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@51b279c9, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1ad282e0, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7f416310, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1cab0bfb, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5e955596, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@50de0926]
INFO  WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
INFO  WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@76b10754, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2bea5ab4, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3d8314f0, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2df32bf7, org.springframework.test.context.transaction.TransactionalTestExecutionListener@530612ba, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2a40cd94]
INFO  WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
INFO  WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1442d7b5, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1efee8e7, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1ee807c6, org.springframework.test.context.support.DirtiesContextTestExecutionListener@76a4d6c, org.springframework.test.context.transaction.TransactionalTestExecutionListener@517cd4b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6cc7b4de]
INFO  WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
INFO  WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4c40b76e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2ea6137, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@41ee392b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1e67a849, org.springframework.test.context.transaction.TransactionalTestExecutionListener@57d5872c, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@667a738]
INFO  WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
INFO  WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@568bf312, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@ca263c2, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@589b3632, org.springframework.test.context.support.DirtiesContextTestExecutionListener@45f45fa1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4c6e276e, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@534df152]INFO  GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@229c6181: startup date [Fri Aug 25 14:42:56 CEST 2017]; root of context hierarchy
INFO  GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@67f9cb52: startup date [Fri Aug 25 14:43:35 CEST 2017]; root of context hierarchy
INFO  GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@cedee22: startup date [Fri Aug 25 14:43:22 CEST 2017]; root of context hierarchy
INFO  GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@12f3afb5: startup date [Fri Aug 25 14:43:09 CEST 2017]; root of context hierarchy
INFO  GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@645dc557: startup date [Fri Aug 25 14:43:36 CEST 2017]; root of context hierarchy
INFO  LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit &amp;#39;petclinic&amp;#39;
INFO  LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit &amp;#39;petclinic&amp;#39;
</output>
        <output type="stdout">Process finished with exit code -1
</output>
    </root>
    <suite duration="359" locationUrl="java:suite://org.springframework.samples.petclinic.model.ValidatorTests" name="ValidatorTests" status="passed">
        <test duration="359" locationUrl="java:test://org.springframework.samples.petclinic.model.ValidatorTests.shouldNotValidateWhenFirstNameEmpty" name="ValidatorTests.shouldNotValidateWhenFirstNameEmpty" status="passed">
            <output type="stdout">INFO  Version - HV000001: Hibernate Validator 5.2.4.Final
</output>
        </test>
    </suite>
    <suite duration="12248" locationUrl="java:suite://org.springframework.samples.petclinic.service.ClinicServiceJdbcTests" name="ClinicServiceJdbcTests" status="passed">
        <test duration="32" locationUrl="java:test://org.springframework.samples.petclinic.service.ClinicServiceJdbcTests.shouldFindVets" name="ClinicServiceJdbcTests.shouldFindVets" status="passed"/>
        <test duration="6086" locationUrl="java:test://org.springframework.samples.petclinic.service.ClinicServiceJdbcTests.shouldFindOwnersByLastName" name="ClinicServiceJdbcTests.shouldFindOwnersByLastName" status="passed"/>
        <test duration="62" locationUrl="java:test://org.springframework.samples.petclinic.service.ClinicServiceJdbcTests.shouldAddNewVisitForPet" name="ClinicServiceJdbcTests.shouldAddNewVisitForPet" status="passed">
            <output type="stdout">INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@649f2009 testClass = ClinicServiceJdbcTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJdbcTests@14bb2297, testMethod = shouldAddNewVisitForPet@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55787112 testClass = ClinicServiceJdbcTests, locations = &amp;#39;{classpath:spring/business-config.xml}&amp;#39;, classes = &amp;#39;{}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{jdbc}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{}&amp;#39;, contextLoader = &amp;#39;org.springframework.test.context.support.DelegatingSmartContextLoader&amp;#39;, parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@69adf72c]; rollback [true]
INFO  TransactionContext - Rolled back transaction for test context [DefaultTestContext@649f2009 testClass = ClinicServiceJdbcTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJdbcTests@14bb2297, testMethod = shouldAddNewVisitForPet@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55787112 testClass = ClinicServiceJdbcTests, locations = &amp;#39;{classpath:spring/business-config.xml}&amp;#39;, classes = &amp;#39;{}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{jdbc}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{}&amp;#39;, contextLoader = &amp;#39;org.springframework.test.context.support.DelegatingSmartContextLoader&amp;#39;, parent = [null]]].
</output>
        </test>
        <test duration="0" locationUrl="java:test://org.springframework.samples.petclinic.service.ClinicServiceJdbcTests.shouldUpdateOwner" name="ClinicServiceJdbcTests.shouldUpdateOwner" status="passed">
            <output type="stdout">INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@649f2009 testClass = ClinicServiceJdbcTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJdbcTests@52c8295b, testMethod = shouldUpdateOwner@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55787112 testClass = ClinicServiceJdbcTests, locations = &amp;#39;{classpath:spring/business-config.xml}&amp;#39;, classes = &amp;#39;{}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{jdbc}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{}&amp;#39;, contextLoader = &amp;#39;org.springframework.test.context.support.DelegatingSmartContextLoader&amp;#39;, parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@69adf72c]; rollback [true]
INFO  TransactionContext - Rolled back transaction for test context [DefaultTestContext@649f2009 testClass = ClinicServiceJdbcTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJdbcTests@52c8295b, testMethod = shouldUpdateOwner@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55787112 testClass = ClinicServiceJdbcTests, locations = &amp;#39;{classpath:spring/business-config.xml}&amp;#39;, classes = &amp;#39;{}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{jdbc}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{}&amp;#39;, contextLoader = &amp;#39;org.springframework.test.context.support.DelegatingSmartContextLoader&amp;#39;, parent = [null]]].
</output>
        </test>
        <test duration="0" locationUrl="java:test://org.springframework.samples.petclinic.service.ClinicServiceJdbcTests.shouldFindVisitsByPetId" name="ClinicServiceJdbcTests.shouldFindVisitsByPetId" status="passed"/>
        <test duration="31" locationUrl="java:test://org.springframework.samples.petclinic.service.ClinicServiceJdbcTests.shouldInsertPetIntoDatabaseAndGenerateId" name="ClinicServiceJdbcTests.shouldInsertPetIntoDatabaseAndGenerateId" status="passed">
            <output type="stdout">INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@649f2009 testClass = ClinicServiceJdbcTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJdbcTests@2575f671, testMethod = shouldInsertPetIntoDatabaseAndGenerateId@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55787112 testClass = ClinicServiceJdbcTests, locations = &amp;#39;{classpath:spring/business-config.xml}&amp;#39;, classes = &amp;#39;{}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{jdbc}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{}&amp;#39;, contextLoader = &amp;#39;org.springframework.test.context.support.DelegatingSmartContextLoader&amp;#39;, parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@69adf72c]; rollback [true]
INFO  TransactionContext - Rolled back transaction for test context [DefaultTestContext@649f2009 testClass = ClinicServiceJdbcTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJdbcTests@2575f671, testMethod = shouldInsertPetIntoDatabaseAndGenerateId@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55787112 testClass = ClinicServiceJdbcTests, locations = &amp;#39;{classpath:spring/business-config.xml}&amp;#39;, classes = &amp;#39;{}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{jdbc}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{}&amp;#39;, contextLoader = &amp;#39;org.springframework.test.context.support.DelegatingSmartContextLoader&amp;#39;, parent = [null]]].
</output>
        </test>
        <test duration="6022" locationUrl="java:test://org.springframework.samples.petclinic.service.ClinicServiceJdbcTests.shouldInsertOwner" name="ClinicServiceJdbcTests.shouldInsertOwner" status="passed">
            <output type="stdout">INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@649f2009 testClass = ClinicServiceJdbcTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJdbcTests@2a2bb0eb, testMethod = shouldInsertOwner@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55787112 testClass = ClinicServiceJdbcTests, locations = &amp;#39;{classpath:spring/business-config.xml}&amp;#39;, classes = &amp;#39;{}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{jdbc}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{}&amp;#39;, contextLoader = &amp;#39;org.springframework.test.context.support.DelegatingSmartContextLoader&amp;#39;, parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@69adf72c]; rollback [true]
INFO  TransactionContext - Rolled back transaction for test context [DefaultTestContext@649f2009 testClass = ClinicServiceJdbcTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJdbcTests@2a2bb0eb, testMethod = shouldInsertOwner@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55787112 testClass = ClinicServiceJdbcTests, locations = &amp;#39;{classpath:spring/business-config.xml}&amp;#39;, classes = &amp;#39;{}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{jdbc}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{}&amp;#39;, contextLoader = &amp;#39;org.springframework.test.context.support.DelegatingSmartContextLoader&amp;#39;, parent = [null]]].
</output>
        </test>
        <test duration="0" locationUrl="java:test://org.springframework.samples.petclinic.service.ClinicServiceJdbcTests.shouldFindSingleOwnerWithPet" name="ClinicServiceJdbcTests.shouldFindSingleOwnerWithPet" status="passed"/>
        <test duration="0" locationUrl="java:test://org.springframework.samples.petclinic.service.ClinicServiceJdbcTests.shouldUpdatePetName" name="ClinicServiceJdbcTests.shouldUpdatePetName" status="passed">
            <output type="stdout">INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@649f2009 testClass = ClinicServiceJdbcTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJdbcTests@29d2d081, testMethod = shouldUpdatePetName@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55787112 testClass = ClinicServiceJdbcTests, locations = &amp;#39;{classpath:spring/business-config.xml}&amp;#39;, classes = &amp;#39;{}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{jdbc}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{}&amp;#39;, contextLoader = &amp;#39;org.springframework.test.context.support.DelegatingSmartContextLoader&amp;#39;, parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@69adf72c]; rollback [true]
INFO  TransactionContext - Rolled back transaction for test context [DefaultTestContext@649f2009 testClass = ClinicServiceJdbcTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJdbcTests@29d2d081, testMethod = shouldUpdatePetName@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55787112 testClass = ClinicServiceJdbcTests, locations = &amp;#39;{classpath:spring/business-config.xml}&amp;#39;, classes = &amp;#39;{}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{jdbc}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{}&amp;#39;, contextLoader = &amp;#39;org.springframework.test.context.support.DelegatingSmartContextLoader&amp;#39;, parent = [null]]].
</output>
        </test>
        <test duration="0" locationUrl="java:test://org.springframework.samples.petclinic.service.ClinicServiceJdbcTests.shouldFindAllPetTypes" name="ClinicServiceJdbcTests.shouldFindAllPetTypes" status="passed"/>
        <test duration="15" locationUrl="java:test://org.springframework.samples.petclinic.service.ClinicServiceJdbcTests.shouldFindPetWithCorrectId" name="ClinicServiceJdbcTests.shouldFindPetWithCorrectId" status="passed"/>
    </suite>
    <suite duration="12324" locationUrl="java:suite://org.springframework.samples.petclinic.service.ClinicServiceJpaTests" name="ClinicServiceJpaTests" status="passed">
        <test duration="171" locationUrl="java:test://org.springframework.samples.petclinic.service.ClinicServiceJpaTests.shouldFindVets" name="ClinicServiceJpaTests.shouldFindVets" status="passed">
            <output type="stdout">Hibernate: select distinct vet0_.id as id1_5_0_, specialty2_.id as id1_2_1_, vet0_.first_name as first_na2_5_0_, vet0_.last_name as last_nam3_5_0_, specialty2_.name as name2_2_1_, specialtie1_.vet_id as vet_id1_5_0__, specialtie1_.specialty_id as specialt2_4_0__ from vets vet0_ left outer join vet_specialties specialtie1_ on vet0_.id=specialtie1_.vet_id left outer join specialties specialty2_ on specialtie1_.specialty_id=specialty2_.id order by vet0_.last_name, vet0_.first_name
</output>
        </test>
        <test duration="6038" locationUrl="java:test://org.springframework.samples.petclinic.service.ClinicServiceJpaTests.shouldFindOwnersByLastName" name="ClinicServiceJpaTests.shouldFindOwnersByLastName" status="passed">
            <output type="stdout">Hibernate: select distinct owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_0_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?
Hibernate: select pettype0_.id as id1_3_0_, pettype0_.name as name2_3_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select pettype0_.id as id1_3_0_, pettype0_.name as name2_3_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select distinct owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_0_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?
</output>
        </test>
        <test duration="15" locationUrl="java:test://org.springframework.samples.petclinic.service.ClinicServiceJpaTests.shouldAddNewVisitForPet" name="ClinicServiceJpaTests.shouldAddNewVisitForPet" status="passed">
            <output type="stdout">INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@7b477141 testClass = ClinicServiceJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJpaTests@784223e9, testMethod = shouldAddNewVisitForPet@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2e17a321 testClass = ClinicServiceJpaTests, locations = &amp;#39;{classpath:spring/business-config.xml}&amp;#39;, classes = &amp;#39;{}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{jpa}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{}&amp;#39;, contextLoader = &amp;#39;org.springframework.test.context.support.DelegatingSmartContextLoader&amp;#39;, parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@7316523a]; rollback [true]
Hibernate: select pet0_.id as id1_1_0_, pet0_.name as name2_1_0_, pet0_.birth_date as birth_da3_1_0_, pet0_.owner_id as owner_id4_1_0_, pet0_.type_id as type_id5_1_0_, owner1_.id as id1_0_1_, owner1_.first_name as first_na2_0_1_, owner1_.last_name as last_nam3_0_1_, owner1_.address as address4_0_1_, owner1_.city as city5_0_1_, owner1_.telephone as telephon6_0_1_, pettype2_.id as id1_3_2_, pettype2_.name as name2_3_2_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id where pet0_.id=?
Hibernate: select visits0_.pet_id as pet_id4_1_0_, visits0_.id as id1_6_0_, visits0_.id as id1_6_1_, visits0_.visit_date as visit_da2_6_1_, visits0_.description as descript3_6_1_, visits0_.pet_id as pet_id4_6_1_ from visits visits0_ where visits0_.pet_id=?
Hibernate: insert into visits (id, visit_date, description, pet_id) values (default, ?, ?, ?)
INFO  TransactionContext - Rolled back transaction for test context [DefaultTestContext@7b477141 testClass = ClinicServiceJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJpaTests@784223e9, testMethod = shouldAddNewVisitForPet@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2e17a321 testClass = ClinicServiceJpaTests, locations = &amp;#39;{classpath:spring/business-config.xml}&amp;#39;, classes = &amp;#39;{}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{jpa}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{}&amp;#39;, contextLoader = &amp;#39;org.springframework.test.context.support.DelegatingSmartContextLoader&amp;#39;, parent = [null]]].
</output>
        </test>
        <test duration="32" locationUrl="java:test://org.springframework.samples.petclinic.service.ClinicServiceJpaTests.shouldUpdateOwner" name="ClinicServiceJpaTests.shouldUpdateOwner" status="passed">
            <output type="stdout">INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@7b477141 testClass = ClinicServiceJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJpaTests@2dd8ff1d, testMethod = shouldUpdateOwner@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2e17a321 testClass = ClinicServiceJpaTests, locations = &amp;#39;{classpath:spring/business-config.xml}&amp;#39;, classes = &amp;#39;{}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{jpa}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{}&amp;#39;, contextLoader = &amp;#39;org.springframework.test.context.support.DelegatingSmartContextLoader&amp;#39;, parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@7316523a]; rollback [true]
Hibernate: select owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_0_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
Hibernate: select pettype0_.id as id1_3_0_, pettype0_.name as name2_3_0_ from types pettype0_ where pettype0_.id=?
Hibernate: update owners set first_name=?, last_name=?, address=?, city=?, telephone=? where id=?
Hibernate: select owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_0_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
INFO  TransactionContext - Rolled back transaction for test context [DefaultTestContext@7b477141 testClass = ClinicServiceJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJpaTests@2dd8ff1d, testMethod = shouldUpdateOwner@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2e17a321 testClass = ClinicServiceJpaTests, locations = &amp;#39;{classpath:spring/business-config.xml}&amp;#39;, classes = &amp;#39;{}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{jpa}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{}&amp;#39;, contextLoader = &amp;#39;org.springframework.test.context.support.DelegatingSmartContextLoader&amp;#39;, parent = [null]]].
</output>
        </test>
        <test duration="15" locationUrl="java:test://org.springframework.samples.petclinic.service.ClinicServiceJpaTests.shouldFindVisitsByPetId" name="ClinicServiceJpaTests.shouldFindVisitsByPetId" status="passed">
            <output type="stdout">Hibernate: select visit0_.id as id1_6_, visit0_.visit_date as visit_da2_6_, visit0_.description as descript3_6_, visit0_.pet_id as pet_id4_6_ from visits visit0_ where visit0_.pet_id=?
Hibernate: select pet0_.id as id1_1_0_, pet0_.name as name2_1_0_, pet0_.birth_date as birth_da3_1_0_, pet0_.owner_id as owner_id4_1_0_, pet0_.type_id as type_id5_1_0_, owner1_.id as id1_0_1_, owner1_.first_name as first_na2_0_1_, owner1_.last_name as last_nam3_0_1_, owner1_.address as address4_0_1_, owner1_.city as city5_0_1_, owner1_.telephone as telephon6_0_1_, pettype2_.id as id1_3_2_, pettype2_.name as name2_3_2_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id where pet0_.id=?
</output>
        </test>
        <test duration="16" locationUrl="java:test://org.springframework.samples.petclinic.service.ClinicServiceJpaTests.shouldInsertPetIntoDatabaseAndGenerateId" name="ClinicServiceJpaTests.shouldInsertPetIntoDatabaseAndGenerateId" status="passed">
            <output type="stdout">INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@7b477141 testClass = ClinicServiceJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJpaTests@28a9494b, testMethod = shouldInsertPetIntoDatabaseAndGenerateId@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2e17a321 testClass = ClinicServiceJpaTests, locations = &amp;#39;{classpath:spring/business-config.xml}&amp;#39;, classes = &amp;#39;{}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{jpa}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{}&amp;#39;, contextLoader = &amp;#39;org.springframework.test.context.support.DelegatingSmartContextLoader&amp;#39;, parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@7316523a]; rollback [true]
Hibernate: select owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_0_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
Hibernate: select pettype0_.id as id1_3_0_, pettype0_.name as name2_3_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select pettype0_.id as id1_3_, pettype0_.name as name2_3_ from types pettype0_ order by pettype0_.name
Hibernate: insert into pets (id, name, birth_date, owner_id, type_id) values (default, ?, ?, ?, ?)
Hibernate: select owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_0_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
INFO  TransactionContext - Rolled back transaction for test context [DefaultTestContext@7b477141 testClass = ClinicServiceJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJpaTests@28a9494b, testMethod = shouldInsertPetIntoDatabaseAndGenerateId@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2e17a321 testClass = ClinicServiceJpaTests, locations = &amp;#39;{classpath:spring/business-config.xml}&amp;#39;, classes = &amp;#39;{}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{jpa}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{}&amp;#39;, contextLoader = &amp;#39;org.springframework.test.context.support.DelegatingSmartContextLoader&amp;#39;, parent = [null]]].
</output>
        </test>
        <test duration="6021" locationUrl="java:test://org.springframework.samples.petclinic.service.ClinicServiceJpaTests.shouldInsertOwner" name="ClinicServiceJpaTests.shouldInsertOwner" status="passed">
            <output type="stdout">INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@7b477141 testClass = ClinicServiceJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJpaTests@158ae284, testMethod = shouldInsertOwner@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2e17a321 testClass = ClinicServiceJpaTests, locations = &amp;#39;{classpath:spring/business-config.xml}&amp;#39;, classes = &amp;#39;{}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{jpa}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{}&amp;#39;, contextLoader = &amp;#39;org.springframework.test.context.support.DelegatingSmartContextLoader&amp;#39;, parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@7316523a]; rollback [true]
Hibernate: select distinct owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_0_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?
Hibernate: insert into owners (id, first_name, last_name, address, city, telephone) values (default, ?, ?, ?, ?, ?)
Hibernate: select distinct owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_0_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?
INFO  TransactionContext - Rolled back transaction for test context [DefaultTestContext@7b477141 testClass = ClinicServiceJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJpaTests@158ae284, testMethod = shouldInsertOwner@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2e17a321 testClass = ClinicServiceJpaTests, locations = &amp;#39;{classpath:spring/business-config.xml}&amp;#39;, classes = &amp;#39;{}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{jpa}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{}&amp;#39;, contextLoader = &amp;#39;org.springframework.test.context.support.DelegatingSmartContextLoader&amp;#39;, parent = [null]]].
</output>
        </test>
        <test duration="0" locationUrl="java:test://org.springframework.samples.petclinic.service.ClinicServiceJpaTests.shouldFindSingleOwnerWithPet" name="ClinicServiceJpaTests.shouldFindSingleOwnerWithPet" status="passed">
            <output type="stdout">Hibernate: select owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_0_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
Hibernate: select pettype0_.id as id1_3_0_, pettype0_.name as name2_3_0_ from types pettype0_ where pettype0_.id=?
</output>
        </test>
        <test duration="16" locationUrl="java:test://org.springframework.samples.petclinic.service.ClinicServiceJpaTests.shouldUpdatePetName" name="ClinicServiceJpaTests.shouldUpdatePetName" status="passed">
            <output type="stdout">INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@7b477141 testClass = ClinicServiceJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJpaTests@1b410308, testMethod = shouldUpdatePetName@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2e17a321 testClass = ClinicServiceJpaTests, locations = &amp;#39;{classpath:spring/business-config.xml}&amp;#39;, classes = &amp;#39;{}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{jpa}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{}&amp;#39;, contextLoader = &amp;#39;org.springframework.test.context.support.DelegatingSmartContextLoader&amp;#39;, parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@7316523a]; rollback [true]
Hibernate: select pet0_.id as id1_1_0_, pet0_.name as name2_1_0_, pet0_.birth_date as birth_da3_1_0_, pet0_.owner_id as owner_id4_1_0_, pet0_.type_id as type_id5_1_0_, owner1_.id as id1_0_1_, owner1_.first_name as first_na2_0_1_, owner1_.last_name as last_nam3_0_1_, owner1_.address as address4_0_1_, owner1_.city as city5_0_1_, owner1_.telephone as telephon6_0_1_, pettype2_.id as id1_3_2_, pettype2_.name as name2_3_2_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id where pet0_.id=?
INFO  TransactionContext - Rolled back transaction for test context [DefaultTestContext@7b477141 testClass = ClinicServiceJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceJpaTests@1b410308, testMethod = shouldUpdatePetName@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2e17a321 testClass = ClinicServiceJpaTests, locations = &amp;#39;{classpath:spring/business-config.xml}&amp;#39;, classes = &amp;#39;{}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{jpa}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{}&amp;#39;, contextLoader = &amp;#39;org.springframework.test.context.support.DelegatingSmartContextLoader&amp;#39;, parent = [null]]].
</output>
        </test>
        <test duration="0" locationUrl="java:test://org.springframework.samples.petclinic.service.ClinicServiceJpaTests.shouldFindAllPetTypes" name="ClinicServiceJpaTests.shouldFindAllPetTypes" status="passed">
            <output type="stdout">Hibernate: select pettype0_.id as id1_3_, pettype0_.name as name2_3_ from types pettype0_ order by pettype0_.name
</output>
        </test>
        <test duration="0" locationUrl="java:test://org.springframework.samples.petclinic.service.ClinicServiceJpaTests.shouldFindPetWithCorrectId" name="ClinicServiceJpaTests.shouldFindPetWithCorrectId" status="passed">
            <output type="stdout">Hibernate: select pet0_.id as id1_1_0_, pet0_.name as name2_1_0_, pet0_.birth_date as birth_da3_1_0_, pet0_.owner_id as owner_id4_1_0_, pet0_.type_id as type_id5_1_0_, owner1_.id as id1_0_1_, owner1_.first_name as first_na2_0_1_, owner1_.last_name as last_nam3_0_1_, owner1_.address as address4_0_1_, owner1_.city as city5_0_1_, owner1_.telephone as telephon6_0_1_, pettype2_.id as id1_3_2_, pettype2_.name as name2_3_2_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id where pet0_.id=?
</output>
        </test>
    </suite>
    <suite duration="12121" locationUrl="java:suite://org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests" name="ClinicServiceSpringDataJpaTests" status="passed">
        <test duration="16" locationUrl="java:test://org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests.shouldFindVets" name="ClinicServiceSpringDataJpaTests.shouldFindVets" status="passed">
            <output type="stdout">Hibernate: select vet0_.id as id1_5_, vet0_.first_name as first_na2_5_, vet0_.last_name as last_nam3_5_ from vets vet0_
Hibernate: select specialtie0_.vet_id as vet_id1_5_0_, specialtie0_.specialty_id as specialt2_4_0_, specialty1_.id as id1_2_1_, specialty1_.name as name2_2_1_ from vet_specialties specialtie0_ inner join specialties specialty1_ on specialtie0_.specialty_id=specialty1_.id where specialtie0_.vet_id=?
Hibernate: select specialtie0_.vet_id as vet_id1_5_0_, specialtie0_.specialty_id as specialt2_4_0_, specialty1_.id as id1_2_1_, specialty1_.name as name2_2_1_ from vet_specialties specialtie0_ inner join specialties specialty1_ on specialtie0_.specialty_id=specialty1_.id where specialtie0_.vet_id=?
Hibernate: select specialtie0_.vet_id as vet_id1_5_0_, specialtie0_.specialty_id as specialt2_4_0_, specialty1_.id as id1_2_1_, specialty1_.name as name2_2_1_ from vet_specialties specialtie0_ inner join specialties specialty1_ on specialtie0_.specialty_id=specialty1_.id where specialtie0_.vet_id=?
Hibernate: select specialtie0_.vet_id as vet_id1_5_0_, specialtie0_.specialty_id as specialt2_4_0_, specialty1_.id as id1_2_1_, specialty1_.name as name2_2_1_ from vet_specialties specialtie0_ inner join specialties specialty1_ on specialtie0_.specialty_id=specialty1_.id where specialtie0_.vet_id=?
Hibernate: select specialtie0_.vet_id as vet_id1_5_0_, specialtie0_.specialty_id as specialt2_4_0_, specialty1_.id as id1_2_1_, specialty1_.name as name2_2_1_ from vet_specialties specialtie0_ inner join specialties specialty1_ on specialtie0_.specialty_id=specialty1_.id where specialtie0_.vet_id=?
Hibernate: select specialtie0_.vet_id as vet_id1_5_0_, specialtie0_.specialty_id as specialt2_4_0_, specialty1_.id as id1_2_1_, specialty1_.name as name2_2_1_ from vet_specialties specialtie0_ inner join specialties specialty1_ on specialtie0_.specialty_id=specialty1_.id where specialtie0_.vet_id=?
</output>
        </test>
        <test duration="6021" locationUrl="java:test://org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests.shouldFindOwnersByLastName" name="ClinicServiceSpringDataJpaTests.shouldFindOwnersByLastName" status="passed">
            <output type="stdout">Hibernate: select distinct owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_0_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?
Hibernate: select pettype0_.id as id1_3_0_, pettype0_.name as name2_3_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select pettype0_.id as id1_3_0_, pettype0_.name as name2_3_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select distinct owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_0_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?
</output>
        </test>
        <test duration="16" locationUrl="java:test://org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests.shouldAddNewVisitForPet" name="ClinicServiceSpringDataJpaTests.shouldAddNewVisitForPet" status="passed">
            <output type="stdout">INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@2e590b testClass = ClinicServiceSpringDataJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests@42ef042a, testMethod = shouldAddNewVisitForPet@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c1e14f testClass = ClinicServiceSpringDataJpaTests, locations = &amp;#39;{classpath:spring/business-config.xml}&amp;#39;, classes = &amp;#39;{}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{spring-data-jpa}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{}&amp;#39;, contextLoader = &amp;#39;org.springframework.test.context.support.DelegatingSmartContextLoader&amp;#39;, parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@1df5c7e3]; rollback [true]
Hibernate: select pet0_.id as id1_1_, pet0_.name as name2_1_, pet0_.birth_date as birth_da3_1_, pet0_.owner_id as owner_id4_1_, pet0_.type_id as type_id5_1_ from pets pet0_ where pet0_.id=?
Hibernate: select owner0_.id as id1_0_0_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_ from owners owner0_ where owner0_.id=?
Hibernate: select pettype0_.id as id1_3_0_, pettype0_.name as name2_3_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select visits0_.pet_id as pet_id4_1_0_, visits0_.id as id1_6_0_, visits0_.id as id1_6_1_, visits0_.visit_date as visit_da2_6_1_, visits0_.description as descript3_6_1_, visits0_.pet_id as pet_id4_6_1_ from visits visits0_ where visits0_.pet_id=?
Hibernate: insert into visits (id, visit_date, description, pet_id) values (default, ?, ?, ?)
Hibernate: select pet0_.id as id1_1_, pet0_.name as name2_1_, pet0_.birth_date as birth_da3_1_, pet0_.owner_id as owner_id4_1_, pet0_.type_id as type_id5_1_ from pets pet0_ where pet0_.id=?
INFO  TransactionContext - Rolled back transaction for test context [DefaultTestContext@2e590b testClass = ClinicServiceSpringDataJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests@42ef042a, testMethod = shouldAddNewVisitForPet@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c1e14f testClass = ClinicServiceSpringDataJpaTests, locations = &amp;#39;{classpath:spring/business-config.xml}&amp;#39;, classes = &amp;#39;{}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{spring-data-jpa}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{}&amp;#39;, contextLoader = &amp;#39;org.springframework.test.context.support.DelegatingSmartContextLoader&amp;#39;, parent = [null]]].
</output>
        </test>
        <test duration="15" locationUrl="java:test://org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests.shouldUpdateOwner" name="ClinicServiceSpringDataJpaTests.shouldUpdateOwner" status="passed">
            <output type="stdout">INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@2e590b testClass = ClinicServiceSpringDataJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests@421d54b3, testMethod = shouldUpdateOwner@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c1e14f testClass = ClinicServiceSpringDataJpaTests, locations = &amp;#39;{classpath:spring/business-config.xml}&amp;#39;, classes = &amp;#39;{}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{spring-data-jpa}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{}&amp;#39;, contextLoader = &amp;#39;org.springframework.test.context.support.DelegatingSmartContextLoader&amp;#39;, parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@1df5c7e3]; rollback [true]
Hibernate: select owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_0_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
Hibernate: select pettype0_.id as id1_3_0_, pettype0_.name as name2_3_0_ from types pettype0_ where pettype0_.id=?
Hibernate: update owners set first_name=?, last_name=?, address=?, city=?, telephone=? where id=?
Hibernate: select owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_0_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
INFO  TransactionContext - Rolled back transaction for test context [DefaultTestContext@2e590b testClass = ClinicServiceSpringDataJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests@421d54b3, testMethod = shouldUpdateOwner@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c1e14f testClass = ClinicServiceSpringDataJpaTests, locations = &amp;#39;{classpath:spring/business-config.xml}&amp;#39;, classes = &amp;#39;{}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{spring-data-jpa}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{}&amp;#39;, contextLoader = &amp;#39;org.springframework.test.context.support.DelegatingSmartContextLoader&amp;#39;, parent = [null]]].
</output>
        </test>
        <test duration="0" locationUrl="java:test://org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests.shouldFindVisitsByPetId" name="ClinicServiceSpringDataJpaTests.shouldFindVisitsByPetId" status="passed">
            <output type="stdout">Hibernate: select visit0_.id as id1_6_, visit0_.visit_date as visit_da2_6_, visit0_.description as descript3_6_, visit0_.pet_id as pet_id4_6_ from visits visit0_ left outer join pets pet1_ on visit0_.pet_id=pet1_.id where pet1_.id=?
Hibernate: select pet0_.id as id1_1_0_, pet0_.name as name2_1_0_, pet0_.birth_date as birth_da3_1_0_, pet0_.owner_id as owner_id4_1_0_, pet0_.type_id as type_id5_1_0_, owner1_.id as id1_0_1_, owner1_.first_name as first_na2_0_1_, owner1_.last_name as last_nam3_0_1_, owner1_.address as address4_0_1_, owner1_.city as city5_0_1_, owner1_.telephone as telephon6_0_1_, pettype2_.id as id1_3_2_, pettype2_.name as name2_3_2_ from pets pet0_ left outer join owners owner1_ on pet0_.owner_id=owner1_.id left outer join types pettype2_ on pet0_.type_id=pettype2_.id where pet0_.id=?
</output>
        </test>
        <test duration="16" locationUrl="java:test://org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests.shouldInsertPetIntoDatabaseAndGenerateId" name="ClinicServiceSpringDataJpaTests.shouldInsertPetIntoDatabaseAndGenerateId" status="passed">
            <output type="stdout">INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@2e590b testClass = ClinicServiceSpringDataJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests@27976390, testMethod = shouldInsertPetIntoDatabaseAndGenerateId@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c1e14f testClass = ClinicServiceSpringDataJpaTests, locations = &amp;#39;{classpath:spring/business-config.xml}&amp;#39;, classes = &amp;#39;{}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{spring-data-jpa}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{}&amp;#39;, contextLoader = &amp;#39;org.springframework.test.context.support.DelegatingSmartContextLoader&amp;#39;, parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@1df5c7e3]; rollback [true]
Hibernate: select owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_0_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
Hibernate: select pettype0_.id as id1_3_0_, pettype0_.name as name2_3_0_ from types pettype0_ where pettype0_.id=?
Hibernate: select pettype0_.id as id1_3_, pettype0_.name as name2_3_ from types pettype0_ order by pettype0_.name
Hibernate: insert into pets (id, name, birth_date, owner_id, type_id) values (default, ?, ?, ?, ?)
Hibernate: select owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_0_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
INFO  TransactionContext - Rolled back transaction for test context [DefaultTestContext@2e590b testClass = ClinicServiceSpringDataJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests@27976390, testMethod = shouldInsertPetIntoDatabaseAndGenerateId@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c1e14f testClass = ClinicServiceSpringDataJpaTests, locations = &amp;#39;{classpath:spring/business-config.xml}&amp;#39;, classes = &amp;#39;{}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{spring-data-jpa}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{}&amp;#39;, contextLoader = &amp;#39;org.springframework.test.context.support.DelegatingSmartContextLoader&amp;#39;, parent = [null]]].
</output>
        </test>
        <test duration="6022" locationUrl="java:test://org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests.shouldInsertOwner" name="ClinicServiceSpringDataJpaTests.shouldInsertOwner" status="passed">
            <output type="stdout">INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@2e590b testClass = ClinicServiceSpringDataJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests@1f84327b, testMethod = shouldInsertOwner@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c1e14f testClass = ClinicServiceSpringDataJpaTests, locations = &amp;#39;{classpath:spring/business-config.xml}&amp;#39;, classes = &amp;#39;{}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{spring-data-jpa}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{}&amp;#39;, contextLoader = &amp;#39;org.springframework.test.context.support.DelegatingSmartContextLoader&amp;#39;, parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@1df5c7e3]; rollback [true]
Hibernate: select distinct owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_0_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?
Hibernate: insert into owners (id, first_name, last_name, address, city, telephone) values (default, ?, ?, ?, ?, ?)
Hibernate: select distinct owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_0_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.last_name like ?
INFO  TransactionContext - Rolled back transaction for test context [DefaultTestContext@2e590b testClass = ClinicServiceSpringDataJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests@1f84327b, testMethod = shouldInsertOwner@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c1e14f testClass = ClinicServiceSpringDataJpaTests, locations = &amp;#39;{classpath:spring/business-config.xml}&amp;#39;, classes = &amp;#39;{}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{spring-data-jpa}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{}&amp;#39;, contextLoader = &amp;#39;org.springframework.test.context.support.DelegatingSmartContextLoader&amp;#39;, parent = [null]]].
</output>
        </test>
        <test duration="0" locationUrl="java:test://org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests.shouldFindSingleOwnerWithPet" name="ClinicServiceSpringDataJpaTests.shouldFindSingleOwnerWithPet" status="passed">
            <output type="stdout">Hibernate: select owner0_.id as id1_0_0_, pets1_.id as id1_1_1_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_, pets1_.name as name2_1_1_, pets1_.birth_date as birth_da3_1_1_, pets1_.owner_id as owner_id4_1_1_, pets1_.type_id as type_id5_1_1_, pets1_.owner_id as owner_id4_0_0__, pets1_.id as id1_1_0__ from owners owner0_ left outer join pets pets1_ on owner0_.id=pets1_.owner_id where owner0_.id=?
Hibernate: select pettype0_.id as id1_3_0_, pettype0_.name as name2_3_0_ from types pettype0_ where pettype0_.id=?
</output>
        </test>
        <test duration="15" locationUrl="java:test://org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests.shouldUpdatePetName" name="ClinicServiceSpringDataJpaTests.shouldUpdatePetName" status="passed">
            <output type="stdout">INFO  TransactionContext - Began transaction (1) for test context [DefaultTestContext@2e590b testClass = ClinicServiceSpringDataJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests@15e1f8fe, testMethod = shouldUpdatePetName@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c1e14f testClass = ClinicServiceSpringDataJpaTests, locations = &amp;#39;{classpath:spring/business-config.xml}&amp;#39;, classes = &amp;#39;{}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{spring-data-jpa}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{}&amp;#39;, contextLoader = &amp;#39;org.springframework.test.context.support.DelegatingSmartContextLoader&amp;#39;, parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@1df5c7e3]; rollback [true]
Hibernate: select pet0_.id as id1_1_, pet0_.name as name2_1_, pet0_.birth_date as birth_da3_1_, pet0_.owner_id as owner_id4_1_, pet0_.type_id as type_id5_1_ from pets pet0_ where pet0_.id=?
Hibernate: select owner0_.id as id1_0_0_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_ from owners owner0_ where owner0_.id=?
Hibernate: select pettype0_.id as id1_3_0_, pettype0_.name as name2_3_0_ from types pettype0_ where pettype0_.id=?
Hibernate: update pets set name=?, birth_date=?, owner_id=?, type_id=? where id=?
Hibernate: select pet0_.id as id1_1_, pet0_.name as name2_1_, pet0_.birth_date as birth_da3_1_, pet0_.owner_id as owner_id4_1_, pet0_.type_id as type_id5_1_ from pets pet0_ where pet0_.id=?
INFO  TransactionContext - Rolled back transaction for test context [DefaultTestContext@2e590b testClass = ClinicServiceSpringDataJpaTests, testInstance = org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests@15e1f8fe, testMethod = shouldUpdatePetName@AbstractClinicServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c1e14f testClass = ClinicServiceSpringDataJpaTests, locations = &amp;#39;{classpath:spring/business-config.xml}&amp;#39;, classes = &amp;#39;{}&amp;#39;, contextInitializerClasses = &amp;#39;[]&amp;#39;, activeProfiles = &amp;#39;{spring-data-jpa}&amp;#39;, propertySourceLocations = &amp;#39;{}&amp;#39;, propertySourceProperties = &amp;#39;{}&amp;#39;, contextLoader = &amp;#39;org.springframework.test.context.support.DelegatingSmartContextLoader&amp;#39;, parent = [null]]].
</output>
        </test>
        <test duration="0" locationUrl="java:test://org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests.shouldFindAllPetTypes" name="ClinicServiceSpringDataJpaTests.shouldFindAllPetTypes" status="passed">
            <output type="stdout">Hibernate: select pettype0_.id as id1_3_, pettype0_.name as name2_3_ from types pettype0_ order by pettype0_.name
</output>
        </test>
        <test duration="0" locationUrl="java:test://org.springframework.samples.petclinic.service.ClinicServiceSpringDataJpaTests.shouldFindPetWithCorrectId" name="ClinicServiceSpringDataJpaTests.shouldFindPetWithCorrectId" status="passed">
            <output type="stdout">Hibernate: select pet0_.id as id1_1_, pet0_.name as name2_1_, pet0_.birth_date as birth_da3_1_, pet0_.owner_id as owner_id4_1_, pet0_.type_id as type_id5_1_ from pets pet0_ where pet0_.id=?
Hibernate: select owner0_.id as id1_0_0_, owner0_.first_name as first_na2_0_0_, owner0_.last_name as last_nam3_0_0_, owner0_.address as address4_0_0_, owner0_.city as city5_0_0_, owner0_.telephone as telephon6_0_0_ from owners owner0_ where owner0_.id=?
Hibernate: select pettype0_.id as id1_3_0_, pettype0_.name as name2_3_0_ from types pettype0_ where pettype0_.id=?
</output>
        </test>
    </suite>
    <suite duration="78" locationUrl="java:suite://org.springframework.samples.petclinic.web.CrashControllerTests" name="CrashControllerTests" status="passed">
        <test duration="78" locationUrl="java:test://org.springframework.samples.petclinic.web.CrashControllerTests.testTriggerException" name="CrashControllerTests.testTriggerException" status="passed">
            <output type="stdout">INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/oups],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.CrashController.triggerException()
INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@2326180c
INFO  MockServletContext - Initializing Spring FrameworkServlet &amp;#39;&amp;#39;
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization started
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization completed in 0 ms
WARN  warn - Handler execution resulted in exception: java.lang.RuntimeException: Expected: controller used to showcase what happens when an exception is thrown
</output>
        </test>
    </suite>
    <suite duration="297" locationUrl="java:suite://org.springframework.samples.petclinic.web.OwnerControllerTests" name="OwnerControllerTests" status="passed">
        <test duration="63" locationUrl="java:test://org.springframework.samples.petclinic.web.OwnerControllerTests.testProcessUpdateOwnerFormHasErrors" name="OwnerControllerTests.testProcessUpdateOwnerFormHasErrors" status="passed">
            <output type="stdout">INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/new],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.initCreationForm(java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/find],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.initFindForm(java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.processFindForm(org.springframework.samples.petclinic.model.Owner,org.springframework.validation.BindingResult,java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}]}&amp;quot; onto public org.springframework.web.servlet.ModelAndView org.springframework.samples.petclinic.web.OwnerController.showOwner(int)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/new],methods=[POST]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.processCreationForm(org.springframework.samples.petclinic.model.Owner,org.springframework.validation.BindingResult)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/edit],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.initUpdateOwnerForm(int,org.springframework.ui.Model)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/edit],methods=[POST]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.processUpdateOwnerForm(org.springframework.samples.petclinic.model.Owner,org.springframework.validation.BindingResult,int)
INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@149d7cc6
INFO  MockServletContext - Initializing Spring FrameworkServlet &amp;#39;&amp;#39;
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization started
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization completed in 0 ms
</output>
        </test>
        <test duration="62" locationUrl="java:test://org.springframework.samples.petclinic.web.OwnerControllerTests.testProcessCreationFormSuccess" name="OwnerControllerTests.testProcessCreationFormSuccess" status="passed">
            <output type="stdout">INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/new],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.initCreationForm(java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/find],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.initFindForm(java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.processFindForm(org.springframework.samples.petclinic.model.Owner,org.springframework.validation.BindingResult,java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}]}&amp;quot; onto public org.springframework.web.servlet.ModelAndView org.springframework.samples.petclinic.web.OwnerController.showOwner(int)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/new],methods=[POST]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.processCreationForm(org.springframework.samples.petclinic.model.Owner,org.springframework.validation.BindingResult)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/edit],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.initUpdateOwnerForm(int,org.springframework.ui.Model)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/edit],methods=[POST]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.processUpdateOwnerForm(org.springframework.samples.petclinic.model.Owner,org.springframework.validation.BindingResult,int)
INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@2e1add6f
INFO  MockServletContext - Initializing Spring FrameworkServlet &amp;#39;&amp;#39;
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization started
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization completed in 0 ms
</output>
        </test>
        <test duration="16" locationUrl="java:test://org.springframework.samples.petclinic.web.OwnerControllerTests.testInitFindForm" name="OwnerControllerTests.testInitFindForm" status="passed">
            <output type="stdout">INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/new],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.initCreationForm(java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/find],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.initFindForm(java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.processFindForm(org.springframework.samples.petclinic.model.Owner,org.springframework.validation.BindingResult,java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}]}&amp;quot; onto public org.springframework.web.servlet.ModelAndView org.springframework.samples.petclinic.web.OwnerController.showOwner(int)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/new],methods=[POST]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.processCreationForm(org.springframework.samples.petclinic.model.Owner,org.springframework.validation.BindingResult)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/edit],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.initUpdateOwnerForm(int,org.springframework.ui.Model)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/edit],methods=[POST]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.processUpdateOwnerForm(org.springframework.samples.petclinic.model.Owner,org.springframework.validation.BindingResult,int)
INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@7ec13984
INFO  MockServletContext - Initializing Spring FrameworkServlet &amp;#39;&amp;#39;
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization started
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization completed in 0 ms
</output>
        </test>
        <test duration="31" locationUrl="java:test://org.springframework.samples.petclinic.web.OwnerControllerTests.testShowOwner" name="OwnerControllerTests.testShowOwner" status="passed">
            <output type="stdout">INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/new],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.initCreationForm(java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/find],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.initFindForm(java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.processFindForm(org.springframework.samples.petclinic.model.Owner,org.springframework.validation.BindingResult,java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}]}&amp;quot; onto public org.springframework.web.servlet.ModelAndView org.springframework.samples.petclinic.web.OwnerController.showOwner(int)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/new],methods=[POST]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.processCreationForm(org.springframework.samples.petclinic.model.Owner,org.springframework.validation.BindingResult)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/edit],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.initUpdateOwnerForm(int,org.springframework.ui.Model)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/edit],methods=[POST]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.processUpdateOwnerForm(org.springframework.samples.petclinic.model.Owner,org.springframework.validation.BindingResult,int)
INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@782cc5fa
INFO  MockServletContext - Initializing Spring FrameworkServlet &amp;#39;&amp;#39;
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization started
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization completed in 0 ms
</output>
        </test>
        <test duration="15" locationUrl="java:test://org.springframework.samples.petclinic.web.OwnerControllerTests.testInitUpdateOwnerForm" name="OwnerControllerTests.testInitUpdateOwnerForm" status="passed">
            <output type="stdout">INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/new],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.initCreationForm(java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/find],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.initFindForm(java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.processFindForm(org.springframework.samples.petclinic.model.Owner,org.springframework.validation.BindingResult,java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}]}&amp;quot; onto public org.springframework.web.servlet.ModelAndView org.springframework.samples.petclinic.web.OwnerController.showOwner(int)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/new],methods=[POST]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.processCreationForm(org.springframework.samples.petclinic.model.Owner,org.springframework.validation.BindingResult)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/edit],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.initUpdateOwnerForm(int,org.springframework.ui.Model)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/edit],methods=[POST]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.processUpdateOwnerForm(org.springframework.samples.petclinic.model.Owner,org.springframework.validation.BindingResult,int)
INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@642c72cf
INFO  MockServletContext - Initializing Spring FrameworkServlet &amp;#39;&amp;#39;
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization started
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization completed in 0 ms
</output>
        </test>
        <test duration="16" locationUrl="java:test://org.springframework.samples.petclinic.web.OwnerControllerTests.testInitCreationForm" name="OwnerControllerTests.testInitCreationForm" status="passed">
            <output type="stdout">INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/new],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.initCreationForm(java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/find],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.initFindForm(java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.processFindForm(org.springframework.samples.petclinic.model.Owner,org.springframework.validation.BindingResult,java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}]}&amp;quot; onto public org.springframework.web.servlet.ModelAndView org.springframework.samples.petclinic.web.OwnerController.showOwner(int)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/new],methods=[POST]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.processCreationForm(org.springframework.samples.petclinic.model.Owner,org.springframework.validation.BindingResult)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/edit],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.initUpdateOwnerForm(int,org.springframework.ui.Model)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/edit],methods=[POST]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.processUpdateOwnerForm(org.springframework.samples.petclinic.model.Owner,org.springframework.validation.BindingResult,int)
INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@210a26b
INFO  MockServletContext - Initializing Spring FrameworkServlet &amp;#39;&amp;#39;
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization started
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization completed in 0 ms
</output>
        </test>
        <test duration="16" locationUrl="java:test://org.springframework.samples.petclinic.web.OwnerControllerTests.testProcessFindFormByLastName" name="OwnerControllerTests.testProcessFindFormByLastName" status="passed">
            <output type="stdout">INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/new],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.initCreationForm(java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/find],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.initFindForm(java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.processFindForm(org.springframework.samples.petclinic.model.Owner,org.springframework.validation.BindingResult,java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}]}&amp;quot; onto public org.springframework.web.servlet.ModelAndView org.springframework.samples.petclinic.web.OwnerController.showOwner(int)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/new],methods=[POST]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.processCreationForm(org.springframework.samples.petclinic.model.Owner,org.springframework.validation.BindingResult)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/edit],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.initUpdateOwnerForm(int,org.springframework.ui.Model)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/edit],methods=[POST]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.processUpdateOwnerForm(org.springframework.samples.petclinic.model.Owner,org.springframework.validation.BindingResult,int)
INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@3316527e
INFO  MockServletContext - Initializing Spring FrameworkServlet &amp;#39;&amp;#39;
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization started
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization completed in 0 ms
</output>
        </test>
        <test duration="15" locationUrl="java:test://org.springframework.samples.petclinic.web.OwnerControllerTests.testProcessFindFormNoOwnersFound" name="OwnerControllerTests.testProcessFindFormNoOwnersFound" status="passed">
            <output type="stdout">INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/new],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.initCreationForm(java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/find],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.initFindForm(java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.processFindForm(org.springframework.samples.petclinic.model.Owner,org.springframework.validation.BindingResult,java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}]}&amp;quot; onto public org.springframework.web.servlet.ModelAndView org.springframework.samples.petclinic.web.OwnerController.showOwner(int)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/new],methods=[POST]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.processCreationForm(org.springframework.samples.petclinic.model.Owner,org.springframework.validation.BindingResult)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/edit],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.initUpdateOwnerForm(int,org.springframework.ui.Model)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/edit],methods=[POST]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.processUpdateOwnerForm(org.springframework.samples.petclinic.model.Owner,org.springframework.validation.BindingResult,int)
INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@64ec1459
INFO  MockServletContext - Initializing Spring FrameworkServlet &amp;#39;&amp;#39;
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization started
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization completed in 0 ms
</output>
        </test>
        <test duration="16" locationUrl="java:test://org.springframework.samples.petclinic.web.OwnerControllerTests.testProcessFindFormSuccess" name="OwnerControllerTests.testProcessFindFormSuccess" status="passed">
            <output type="stdout">INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/new],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.initCreationForm(java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/find],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.initFindForm(java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.processFindForm(org.springframework.samples.petclinic.model.Owner,org.springframework.validation.BindingResult,java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}]}&amp;quot; onto public org.springframework.web.servlet.ModelAndView org.springframework.samples.petclinic.web.OwnerController.showOwner(int)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/new],methods=[POST]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.processCreationForm(org.springframework.samples.petclinic.model.Owner,org.springframework.validation.BindingResult)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/edit],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.initUpdateOwnerForm(int,org.springframework.ui.Model)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/edit],methods=[POST]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.processUpdateOwnerForm(org.springframework.samples.petclinic.model.Owner,org.springframework.validation.BindingResult,int)
INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@1109730f
INFO  MockServletContext - Initializing Spring FrameworkServlet &amp;#39;&amp;#39;
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization started
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization completed in 0 ms
</output>
        </test>
        <test duration="15" locationUrl="java:test://org.springframework.samples.petclinic.web.OwnerControllerTests.testProcessUpdateOwnerFormSuccess" name="OwnerControllerTests.testProcessUpdateOwnerFormSuccess" status="passed">
            <output type="stdout">INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/new],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.initCreationForm(java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/find],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.initFindForm(java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.processFindForm(org.springframework.samples.petclinic.model.Owner,org.springframework.validation.BindingResult,java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}]}&amp;quot; onto public org.springframework.web.servlet.ModelAndView org.springframework.samples.petclinic.web.OwnerController.showOwner(int)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/new],methods=[POST]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.processCreationForm(org.springframework.samples.petclinic.model.Owner,org.springframework.validation.BindingResult)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/edit],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.initUpdateOwnerForm(int,org.springframework.ui.Model)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/edit],methods=[POST]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.processUpdateOwnerForm(org.springframework.samples.petclinic.model.Owner,org.springframework.validation.BindingResult,int)
INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@60652518
INFO  MockServletContext - Initializing Spring FrameworkServlet &amp;#39;&amp;#39;
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization started
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization completed in 0 ms
</output>
        </test>
        <test duration="32" locationUrl="java:test://org.springframework.samples.petclinic.web.OwnerControllerTests.testProcessCreationFormHasErrors" name="OwnerControllerTests.testProcessCreationFormHasErrors" status="passed">
            <output type="stdout">INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/new],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.initCreationForm(java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/find],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.initFindForm(java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.processFindForm(org.springframework.samples.petclinic.model.Owner,org.springframework.validation.BindingResult,java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}]}&amp;quot; onto public org.springframework.web.servlet.ModelAndView org.springframework.samples.petclinic.web.OwnerController.showOwner(int)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/new],methods=[POST]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.processCreationForm(org.springframework.samples.petclinic.model.Owner,org.springframework.validation.BindingResult)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/edit],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.initUpdateOwnerForm(int,org.springframework.ui.Model)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/edit],methods=[POST]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.OwnerController.processUpdateOwnerForm(org.springframework.samples.petclinic.model.Owner,org.springframework.validation.BindingResult,int)
INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@48fc0211
INFO  MockServletContext - Initializing Spring FrameworkServlet &amp;#39;&amp;#39;
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization started
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization completed in 0 ms
</output>
        </test>
    </suite>
    <suite duration="109" locationUrl="java:suite://org.springframework.samples.petclinic.web.PetControllerTests" name="PetControllerTests" status="failed">
        <test duration="31" locationUrl="java:test://org.springframework.samples.petclinic.web.PetControllerTests.testProcessCreationFormSuccess" name="PetControllerTests.testProcessCreationFormSuccess" status="passed">
            <output type="stdout">INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/pets/new],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.PetController.initCreationForm(org.springframework.samples.petclinic.model.Owner,org.springframework.ui.ModelMap)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/pets/{petId}/edit],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.PetController.initUpdateForm(int,org.springframework.ui.ModelMap)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/pets/new],methods=[POST]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.PetController.processCreationForm(org.springframework.samples.petclinic.model.Owner,org.springframework.samples.petclinic.model.Pet,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/pets/{petId}/edit],methods=[POST]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.PetController.processUpdateForm(org.springframework.samples.petclinic.model.Pet,org.springframework.validation.BindingResult,org.springframework.samples.petclinic.model.Owner,org.springframework.ui.ModelMap)
INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@79b63325
INFO  MockServletContext - Initializing Spring FrameworkServlet &amp;#39;&amp;#39;
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization started
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization completed in 0 ms
</output>
        </test>
        <test duration="15" locationUrl="java:test://org.springframework.samples.petclinic.web.PetControllerTests.testProcessUpdateFormSuccess" name="PetControllerTests.testProcessUpdateFormSuccess" status="passed">
            <output type="stdout">INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/pets/new],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.PetController.initCreationForm(org.springframework.samples.petclinic.model.Owner,org.springframework.ui.ModelMap)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/pets/{petId}/edit],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.PetController.initUpdateForm(int,org.springframework.ui.ModelMap)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/pets/new],methods=[POST]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.PetController.processCreationForm(org.springframework.samples.petclinic.model.Owner,org.springframework.samples.petclinic.model.Pet,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/pets/{petId}/edit],methods=[POST]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.PetController.processUpdateForm(org.springframework.samples.petclinic.model.Pet,org.springframework.validation.BindingResult,org.springframework.samples.petclinic.model.Owner,org.springframework.ui.ModelMap)
INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@525b8922
INFO  MockServletContext - Initializing Spring FrameworkServlet &amp;#39;&amp;#39;
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization started
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization completed in 0 ms
</output>
        </test>
        <test duration="16" locationUrl="java:test://org.springframework.samples.petclinic.web.PetControllerTests.testInitUpdateForm" name="PetControllerTests.testInitUpdateForm" status="failed">
            <output type="stdout">INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/pets/new],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.PetController.initCreationForm(org.springframework.samples.petclinic.model.Owner,org.springframework.ui.ModelMap)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/pets/{petId}/edit],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.PetController.initUpdateForm(int,org.springframework.ui.ModelMap)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/pets/new],methods=[POST]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.PetController.processCreationForm(org.springframework.samples.petclinic.model.Owner,org.springframework.samples.petclinic.model.Pet,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/pets/{petId}/edit],methods=[POST]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.PetController.processUpdateForm(org.springframework.samples.petclinic.model.Pet,org.springframework.validation.BindingResult,org.springframework.samples.petclinic.model.Owner,org.springframework.ui.ModelMap)
INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@1f408ab6
INFO  MockServletContext - Initializing Spring FrameworkServlet &amp;#39;&amp;#39;
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization started
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization completed in 0 ms
</output>
            <output type="stderr">java.lang.AssertionError: View name 
</output>
            <output type="stdout">Expected :
</output>
            <output type="stderr">pets/createOrUpdatePetForm
</output>
            <output type="stdout">Actual   :
</output>
            <output type="stderr">Folder changed
 
&#13;
	at org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)&#13;
	at org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)&#13;
	at org.springframework.test.web.servlet.result.ViewResultMatchers$2.match(ViewResultMatchers.java:69)&#13;
	at org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)&#13;
	at org.springframework.samples.petclinic.web.PetControllerTests.testInitUpdateForm(PetControllerTests.java:99)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)&#13;
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)&#13;
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:254)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:89)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)&#13;
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:193)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)&#13;
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
        </test>
        <test duration="15" locationUrl="java:test://org.springframework.samples.petclinic.web.PetControllerTests.testInitCreationForm" name="PetControllerTests.testInitCreationForm" status="failed">
            <output type="stdout">INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/pets/new],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.PetController.initCreationForm(org.springframework.samples.petclinic.model.Owner,org.springframework.ui.ModelMap)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/pets/{petId}/edit],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.PetController.initUpdateForm(int,org.springframework.ui.ModelMap)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/pets/new],methods=[POST]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.PetController.processCreationForm(org.springframework.samples.petclinic.model.Owner,org.springframework.samples.petclinic.model.Pet,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/pets/{petId}/edit],methods=[POST]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.PetController.processUpdateForm(org.springframework.samples.petclinic.model.Pet,org.springframework.validation.BindingResult,org.springframework.samples.petclinic.model.Owner,org.springframework.ui.ModelMap)
INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@47be41c6
INFO  MockServletContext - Initializing Spring FrameworkServlet &amp;#39;&amp;#39;
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization started
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization completed in 0 ms
</output>
            <output type="stderr">java.lang.AssertionError: View name 
</output>
            <output type="stdout">Expected :
</output>
            <output type="stderr">pets/createOrUpdatePetForm
</output>
            <output type="stdout">Actual   :
</output>
            <output type="stderr">Folder changed
 
&#13;
	at org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)&#13;
	at org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)&#13;
	at org.springframework.test.web.servlet.result.ViewResultMatchers$2.match(ViewResultMatchers.java:69)&#13;
	at org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)&#13;
	at org.springframework.samples.petclinic.web.PetControllerTests.testInitCreationForm(PetControllerTests.java:67)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)&#13;
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)&#13;
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:254)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:89)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)&#13;
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:193)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)&#13;
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
        </test>
        <test duration="16" locationUrl="java:test://org.springframework.samples.petclinic.web.PetControllerTests.testProcessCreationFormHasErrors" name="PetControllerTests.testProcessCreationFormHasErrors" status="failed">
            <output type="stdout">INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/pets/new],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.PetController.initCreationForm(org.springframework.samples.petclinic.model.Owner,org.springframework.ui.ModelMap)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/pets/{petId}/edit],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.PetController.initUpdateForm(int,org.springframework.ui.ModelMap)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/pets/new],methods=[POST]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.PetController.processCreationForm(org.springframework.samples.petclinic.model.Owner,org.springframework.samples.petclinic.model.Pet,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/pets/{petId}/edit],methods=[POST]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.PetController.processUpdateForm(org.springframework.samples.petclinic.model.Pet,org.springframework.validation.BindingResult,org.springframework.samples.petclinic.model.Owner,org.springframework.ui.ModelMap)
INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@14e3d439
INFO  MockServletContext - Initializing Spring FrameworkServlet &amp;#39;&amp;#39;
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization started
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization completed in 0 ms
</output>
            <output type="stderr">java.lang.AssertionError: View name 
</output>
            <output type="stdout">Expected :
</output>
            <output type="stderr">pets/createOrUpdatePetForm
</output>
            <output type="stdout">Actual   :
</output>
            <output type="stderr">Folder changed
 
&#13;
	at org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)&#13;
	at org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)&#13;
	at org.springframework.test.web.servlet.result.ViewResultMatchers$2.match(ViewResultMatchers.java:69)&#13;
	at org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)&#13;
	at org.springframework.samples.petclinic.web.PetControllerTests.testProcessCreationFormHasErrors(PetControllerTests.java:91)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)&#13;
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)&#13;
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:254)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:89)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)&#13;
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:193)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)&#13;
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
        </test>
        <test duration="16" locationUrl="java:test://org.springframework.samples.petclinic.web.PetControllerTests.testProcessUpdateFormHasErrors" name="PetControllerTests.testProcessUpdateFormHasErrors" status="failed">
            <output type="stdout">INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/pets/new],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.PetController.initCreationForm(org.springframework.samples.petclinic.model.Owner,org.springframework.ui.ModelMap)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/pets/{petId}/edit],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.PetController.initUpdateForm(int,org.springframework.ui.ModelMap)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/pets/new],methods=[POST]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.PetController.processCreationForm(org.springframework.samples.petclinic.model.Owner,org.springframework.samples.petclinic.model.Pet,org.springframework.validation.BindingResult,org.springframework.ui.ModelMap)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/pets/{petId}/edit],methods=[POST]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.PetController.processUpdateForm(org.springframework.samples.petclinic.model.Pet,org.springframework.validation.BindingResult,org.springframework.samples.petclinic.model.Owner,org.springframework.ui.ModelMap)
INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@432c0f1
INFO  MockServletContext - Initializing Spring FrameworkServlet &amp;#39;&amp;#39;
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization started
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization completed in 0 ms
</output>
            <output type="stderr">java.lang.AssertionError: View name 
</output>
            <output type="stdout">Expected :
</output>
            <output type="stderr">pets/createOrUpdatePetForm
</output>
            <output type="stdout">Actual   :
</output>
            <output type="stderr">Folder changed
 
&#13;
	at org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:60)&#13;
	at org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:89)&#13;
	at org.springframework.test.web.servlet.result.ViewResultMatchers$2.match(ViewResultMatchers.java:69)&#13;
	at org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:171)&#13;
	at org.springframework.samples.petclinic.web.PetControllerTests.testProcessUpdateFormHasErrors(PetControllerTests.java:122)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)&#13;
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)&#13;
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:254)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:89)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)&#13;
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:193)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)&#13;
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)&#13;
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)&#13;
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)&#13;
</output>
        </test>
    </suite>
    <suite duration="0" locationUrl="java:suite://org.springframework.samples.petclinic.web.PetTypeFormatterTests" name="PetTypeFormatterTests" status="passed">
        <test duration="0" locationUrl="java:test://org.springframework.samples.petclinic.web.PetTypeFormatterTests.shouldThrowParseException" name="PetTypeFormatterTests.shouldThrowParseException" status="passed"/>
        <test duration="0" locationUrl="java:test://org.springframework.samples.petclinic.web.PetTypeFormatterTests.testPrint" name="PetTypeFormatterTests.testPrint" status="passed"/>
        <test duration="0" locationUrl="java:test://org.springframework.samples.petclinic.web.PetTypeFormatterTests.shouldParse" name="PetTypeFormatterTests.shouldParse" status="passed"/>
    </suite>
    <suite duration="171" locationUrl="java:suite://org.springframework.samples.petclinic.web.VetControllerTests" name="VetControllerTests" status="passed">
        <test duration="78" locationUrl="java:test://org.springframework.samples.petclinic.web.VetControllerTests.testShowVetListXml" name="VetControllerTests.testShowVetListXml" status="passed">
            <output type="stdout">INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/vets.json || /vets.xml]}&amp;quot; onto public org.springframework.samples.petclinic.model.Vets org.springframework.samples.petclinic.web.VetController.showResourcesVetList()
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/vets.html]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.VetController.showVetList(java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@71139e77
INFO  MockServletContext - Initializing Spring FrameworkServlet &amp;#39;&amp;#39;
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization started
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization completed in 15 ms
</output>
        </test>
        <test duration="15" locationUrl="java:test://org.springframework.samples.petclinic.web.VetControllerTests.testShowVetListHtml" name="VetControllerTests.testShowVetListHtml" status="passed">
            <output type="stdout">INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/vets.json || /vets.xml]}&amp;quot; onto public org.springframework.samples.petclinic.model.Vets org.springframework.samples.petclinic.web.VetController.showResourcesVetList()
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/vets.html]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.VetController.showVetList(java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@3d8d52be
INFO  MockServletContext - Initializing Spring FrameworkServlet &amp;#39;&amp;#39;
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization started
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization completed in 0 ms
</output>
        </test>
        <test duration="78" locationUrl="java:test://org.springframework.samples.petclinic.web.VetControllerTests.testShowResourcesVetList" name="VetControllerTests.testShowResourcesVetList" status="passed">
            <output type="stdout">INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/vets.json || /vets.xml]}&amp;quot; onto public org.springframework.samples.petclinic.model.Vets org.springframework.samples.petclinic.web.VetController.showResourcesVetList()
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/vets.html]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.VetController.showVetList(java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@4cb4c4cc
INFO  MockServletContext - Initializing Spring FrameworkServlet &amp;#39;&amp;#39;
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization started
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization completed in 0 ms
</output>
        </test>
    </suite>
    <suite duration="63" locationUrl="java:suite://org.springframework.samples.petclinic.web.VisitControllerTests" name="VisitControllerTests" status="passed">
        <test duration="16" locationUrl="java:test://org.springframework.samples.petclinic.web.VisitControllerTests.testProcessNewVisitFormHasErrors" name="VisitControllerTests.testProcessNewVisitFormHasErrors" status="passed">
            <output type="stdout">INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/pets/{petId}/visits/new],methods=[POST]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.VisitController.processNewVisitForm(org.springframework.samples.petclinic.model.Visit,org.springframework.validation.BindingResult)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/*/pets/{petId}/visits],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.VisitController.showVisits(int,java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/*/pets/{petId}/visits/new],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.VisitController.initNewVisitForm(int,java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@154864f8
INFO  MockServletContext - Initializing Spring FrameworkServlet &amp;#39;&amp;#39;
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization started
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization completed in 0 ms
</output>
        </test>
        <test duration="15" locationUrl="java:test://org.springframework.samples.petclinic.web.VisitControllerTests.testProcessNewVisitFormSuccess" name="VisitControllerTests.testProcessNewVisitFormSuccess" status="passed">
            <output type="stdout">INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/pets/{petId}/visits/new],methods=[POST]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.VisitController.processNewVisitForm(org.springframework.samples.petclinic.model.Visit,org.springframework.validation.BindingResult)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/*/pets/{petId}/visits],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.VisitController.showVisits(int,java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/*/pets/{petId}/visits/new],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.VisitController.initNewVisitForm(int,java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@120411ec
INFO  MockServletContext - Initializing Spring FrameworkServlet &amp;#39;&amp;#39;
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization started
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization completed in 0 ms
</output>
        </test>
        <test duration="16" locationUrl="java:test://org.springframework.samples.petclinic.web.VisitControllerTests.testShowVisits" name="VisitControllerTests.testShowVisits" status="passed">
            <output type="stdout">INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/pets/{petId}/visits/new],methods=[POST]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.VisitController.processNewVisitForm(org.springframework.samples.petclinic.model.Visit,org.springframework.validation.BindingResult)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/*/pets/{petId}/visits],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.VisitController.showVisits(int,java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/*/pets/{petId}/visits/new],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.VisitController.initNewVisitForm(int,java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@2f9addd4
INFO  MockServletContext - Initializing Spring FrameworkServlet &amp;#39;&amp;#39;
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization started
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization completed in 0 ms
</output>
        </test>
        <test duration="16" locationUrl="java:test://org.springframework.samples.petclinic.web.VisitControllerTests.testInitNewVisitForm" name="VisitControllerTests.testInitNewVisitForm" status="passed">
            <output type="stdout">INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/{ownerId}/pets/{petId}/visits/new],methods=[POST]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.VisitController.processNewVisitForm(org.springframework.samples.petclinic.model.Visit,org.springframework.validation.BindingResult)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/*/pets/{petId}/visits],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.VisitController.showVisits(int,java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  StandaloneMockMvcBuilder$StaticRequestMappingHandlerMapping - Mapped &amp;quot;{[/owners/*/pets/{petId}/visits/new],methods=[GET]}&amp;quot; onto public java.lang.String org.springframework.samples.petclinic.web.VisitController.initNewVisitForm(int,java.util.Map&amp;lt;java.lang.String, java.lang.Object&amp;gt;)
INFO  RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@67f591c2
INFO  MockServletContext - Initializing Spring FrameworkServlet &amp;#39;&amp;#39;
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization started
INFO  TestDispatcherServlet - FrameworkServlet &amp;#39;&amp;#39;: initialization completed in 0 ms
</output>
        </test>
    </suite>
</testrun>
